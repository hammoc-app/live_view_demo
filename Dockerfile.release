FROM elixir:1.9.1-alpine as build-stage

ENV MIX_ENV=prod

RUN apk add --no-cache git npm

# Install hex and rebar
RUN mix local.hex --force && \
    mix local.rebar --force

# Create build directory
RUN mkdir -p /opt/built
WORKDIR /opt/built

# Cache elixir deps
COPY mix.exs mix.lock ./
RUN mix do deps.get --only prod --no-archives-check, deps.compile

# Cache npm deps
COPY assets/package.json assets/package-lock.json assets/
RUN cd assets && \
    npm install

# Run frontend build, compile
COPY assets assets
RUN cd assets/ && \
    npm run deploy

# Digest assets
COPY config config
RUN mix phx.digest

# Build OTP release
COPY . .
RUN mix release


FROM erlang:22-alpine

EXPOSE 8080
ENV PORT=8080

RUN mkdir -p /opt/app && \
    adduser -u 1001 -D default
WORKDIR /opt/app

COPY --from=build-stage --chown=1001:0 /opt/built/_build/prod/rel/live_view_demo .
COPY --from=build-stage --chown=1001:0 /opt/built/priv/fixtures priv/fixtures

# USER default

ENTRYPOINT ["./bin/live_view_demo"]
CMD ["start"]
